name: build_macos

on:
  workflow_dispatch:

jobs:
  
  build:
    runs-on: macos-latest
    steps:
    - name: setup nasm
      uses: ilammy/setup-nasm@v1.4.0
    - name: setup autoconf
      run: brew install autoconf
    - name: setup automake
      run: brew install automake
    - name: setup libtool
      run: brew install libtool
    - name: set up node.js
      uses: actions/setup-node@v3.5.1
    - name: set up yarn
      run: |
        corepack enalbe && corepack prepare yarn@stable --activate
    - name: download protoc
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'protocolbuffers/protobuf'
        version: 'tags/v21.9'
        file: 'protoc-21.9-osx-x86_64.zip'
        target: '${{github.workspace}}/artifacts/protoc/protoc-21.9-osx-x86_64.zip'
    - name: unzip protoc
      working-directory: ${{github.workspace}}/artifacts/protoc
      run: 7zip x protoc-21.9-osx-x86_64.zip
    - name: set up protoc
      run: echo "PATH=$PATH:${{github.workspace}}/artifacts/protoc/bin" >> $GITHUB_ENV
    - name: install tauri-cli
      uses: baptiste0928/cargo-install@v1.3.0
      with:
        crate: tauri-cli
    - name: use cargo cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: checkout repository
      uses: actions/checkout@v2.5.0
    - name: build
      run: cargo tauri build
