name: build_macos

on:
  workflow_dispatch:

jobs:
  build_x264:
    runs-on: macos-latest
    steps:

    - name: clone libx264 latest release
      run: git clone https://github.com/mirror/x264.git -b stable --depth=1
    - name: get repository commit hash
      working-directory: ./x264
      id: get-commit-hash
      run: |
        echo "::set-output name=hash::$(git rev-parse --short HEAD)"
      shell: bash
    - name: cache libx264
      id: cache-libx264
      uses: actions/cache@v3
      with:
        path: |
          /usr/local/include/x264.h
          /usr/local/include/x264_config.h
          /usr/local/lib/pkgconfig/x264.pc
          /usr/local/lib/libx264.a
        key: ${{ runner.os }}-libx264-${{ steps.get-commit-hash.outputs.hash }}
    - name: check if need compile
      if: steps.cache-libx264.outputs.cache-hit != 'true'
    - name: set up nasm
      uses: ilammy/setup-nasm@v1.4.0
    - name: configure
      working-directory: ./x264
      run: ./configure --enable-pic --enable-static --enable-strip --disable-cli --disable-opencl
    - name: make
      working-directory: ./x264
      run: make
    - name: make install
      working-directory: ./x264
      run: make install
    - name: make clean
      working-directory: ./x264
      run: make clean
      
  build_x265:
    runs-on: macos-latest
    steps:
    - name: clone libx265 latest release
      run: git clone https://bitbucket.org/multicoreware/x265_git.git -b stable --depth=1
    - name: get repository commit hash
      working-directory: ./x265_git
      id: get-commit-hash
      run: |
        echo "::set-output name=hash::$(git rev-parse --short HEAD)"
      shell: bash
    - name: cache libx265
      id: cache-libx265
      uses: actions/cache@v3
      with:
        path: |
          /usr/local/lib/libx265.a
          /usr/local/include/x265.h
          /usr/local/include/x265_config.h
        key: ${{ runner.os }}-libx265-${{ steps.get-commit-hash.outputs.hash }}
    - name: check if need compile
      if: steps.cache-libx265.outputs.cache-hit != 'true'
    - name: set up nasm
      uses: ilammy/setup-nasm@v1.4.0
    - name: cmake configure
      working-directory: ./x265_git
      run: cmake ./source -DENABLE_SHARED=OFF -DENABLE_CLI=OFF -DENABLE_PIC=ON
    - name: cmake
      working-directory: ./x265_git
      run: cmake --build . --config Release
    - name: cmake install
      working-directory: ./x265_git
      run: cmake --install .
  
  build_opus:
    runs-on: macos-latest
    steps:
    - name: clone libopus lates release
      run: git clone https://github.com/xiph/opus.git -b 1.1.2 --depth=1
    - name: get repository commit hash
      working-directory: ./opus
      id: get-commit-hash
      run: |
        echo "::set-output name=hash::$(git rev-parse --short HEAD)"
      shell: bash
    - name: cache opus
      id: cache-opus
      uses: actions/cache@v3
      with:
        path: |
          /usr/local/lib/libopus.a
          /usr/local/lib/pkgconfig/opus.pc
          /usr/local/include/opus
        key: ${{ runner.os }}-libopus-${{ steps.get-commit-hash.outputs.hash }}
    - name: check if need compile
      if: steps.cache-libx265.outputs.cache-hit != 'true'
    - name: setup autoconf
      run: brew install autoconf
    - name: setup automake
      run: brew install automake
    - name: setup libtool
      run: brew install libtool
    - name: autogen
      working-directory: ./opus
      run: ./autogen.sh
    - name: configure
      working-directory: ./opus
      run: ./configure --host=x86_64 --enable-static --disable-shared --disable-doc --disable-extra-programs
    - name: make
      working-directory: ./opus
      run: make
    - name: make install
      working-directory: ./opus
      run: make install
    - name: make clean
      working-directory: ./opus
      run: make clean
  
  build_ffmpeg:
    runs-on: macos-latest
    needs: [build_x264, build_x265]
    steps:
    - name: clone FFMPEG 5.1 release
      run: git clone https://github.com/FFmpeg/FFmpeg.git -b release/5.1 --depth=1
    - name: configure
      working-directory: ./FFmpeg
      run: |
        ./configure \
        --disable-all \
        --disable-autodetect \
        --arch=x86_64 \
        --pkg-config-flags=--static \
        --enable-stripping \
        --disable-debug \
        --enable-pic \
        --enable-hardcoded-tables \
        --enable-gpl \
        --enable-version3 \
        --enable-avdevice \
        --enable-avcodec \
        --enable-avformat \
        --disable-doc \
        --disable-htmlpages \
        --disable-manpages \
        --disable-podpages \
        --disable-txtpages \
        --disable-network \
        --enable-libx264 \
        --enable-videotoolbox \
        --enable-audiotoolbox \
        --enable-encoder=libx264 \
        --enable-decoder=h264 \
        --enable-encoder=h264_videotoolbox \
        --enable-encoder=hevc_videotoolbox \
        --enable-hwaccel=h264_videotoolbox \
        --enable-hwaccel=hevc_videotoolbox \
        --enable-hwaccel=vp9_videotoolbox \
        --enable-parser=h264 \
        --enable-parser=h265
    - name: make
      working-directory: ./FFmpeg
      run: make
    - name: make install
      working-directory: ./FFmpeg
      run: make install
    - name: make clean
      working-directory: ./FFmpeg
      run: make clean

